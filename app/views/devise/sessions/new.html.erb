<div class="w-full flex flex-col justify-start items-center">
  <div class="flex md:w-1/2 justify-center py-10 items-center bg-white">
    <%= form_for(resource, as: resource_name, url: session_path(resource_name), class: "bg-white", id: "login_form") do |f| %>
      <%= render "devise/shared/error_messages", resource: resource %>

      <h1 class="text-gray-800 font-bold text-2xl mb-3">Log in</h1>

      <div class="flex items-center border-2 py-2 px-3 rounded-2xl mb-4">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207" />
        </svg>
        <%= f.email_field :email, class: "pl-2 outline-none border-none border-transparent focus:border-transparent focus:ring-0", placeholder: "Email Address", autocomplete: "email", autofocus: true, id: "user_email" %>
      </div>

      <div class="flex items-center border-2 py-2 px-3 rounded-2xl mb-4" id="password_field">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd" />
        </svg>
        <%= f.password_field :password, class: "pl-2 outline-none border-none border-transparent focus:border-transparent focus:ring-0", placeholder: "Password", autocomplete: "new-password" %>
      </div>

      <% if resource.is_a?(User) %>
        <div class="flex items-center border-2 py-2 px-3 rounded-2xl mb-4" id="otp_field" style="display: none;">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v1m6 11h2m-6 0h-2m0 0H8m0 0V8m0 8h4m-4-8h4m-4 4h4m-6-4h2m4 4h2m4-4h2m4 4h2m-6-4h2m-6 4h2m-6-4h2m-6 4h2M6 4h12a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V6a2 2 0 012-2z" />
          </svg>
          <%= f.text_field :otp, class: "pl-2 outline-none border-none border-transparent focus:border-transparent focus:ring-0", placeholder: "Enter OTP", autocomplete: "off", id: "user_otp" %>
        </div>

        <button type="button" onclick="toggleOTP()" class="block w-full bg-blue-600 mt-2 py-2 rounded-2xl text-white font-semibold mb-2" id="otp_button">
          Login with OTP
        </button>
      <% end %>

      <% if devise_mapping.rememberable? %>
        <div class="mt-4 ml-2">
          <%= f.check_box :remember_me, class: "rounded" %>
          <%= f.label :remember_me, class: "text-gray-400 text-sm font-bold" %>
        </div>
      <% end %>

      <%= f.submit "Log in", class: "block w-full bg-green-600 mt-4 py-2 rounded-2xl text-white font-semibold mb-2" %>

      <div class="mt-6">
        <%= render "devise/shared/links" %>
      </div>
    <% end %>
  </div>
</div>


<script>
let otpMode = false;
function toggleOTP() {
  const email = document.getElementById('user_email').value;
  if (!email) {
    alert('Please enter your email first');
    return;
  }
  otpMode = !otpMode;
  const otpField = document.getElementById('otp_field');
  const passwordField = document.getElementById('password_field');
  const otpButton = document.getElementById('otp_button');
  const submitButton = document.querySelector('input[type="submit"]');
  if (otpMode) {
    // Switch to OTP mode
    passwordField.style.display = 'none';
    otpField.style.display = 'flex';
    otpButton.textContent = 'Use Password Instead';
    otpButton.classList.remove('bg-blue-600');
    otpButton.classList.add('bg-gray-600');
    submitButton.value = 'Verify OTP';
    
    // Request OTP
    fetch('/users/generate_otp', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: JSON.stringify({ email: email })
    })
    .then(response => response.json())
    .then(data => {
      if (data.message) {
        alert(data.message);
      } else {
        alert(data.error);
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Error sending OTP');
    });
  } else {
    passwordField.style.display = 'flex';
    otpField.style.display = 'none';
    otpButton.textContent = 'Login with OTP';
    otpButton.classList.remove('bg-gray-600');
    otpButton.classList.add('bg-blue-600');
    submitButton.value = 'Log in';
  }
}
// Add this function to handle form submission
document.getElementById('login_form').addEventListener('submit', function(e) {
  if (otpMode) {
    e.preventDefault();
    const email = document.getElementById('user_email').value;
    const otp = document.getElementById('user_otp').value;
    fetch('/users/verify_otp', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: JSON.stringify({ email: email, otp: otp })
    })
    .then(response => response.json())
    .then(data => {
      if (data.message) {
        window.location.href = data.redirect_url;
      } else {
        alert(data.error);
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Error verifying OTP');
    });
  }
});
</script>